
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: notification-worker-ws-ingress
  namespace: worker-app-dev
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "ws-cookie"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
spec:
  tls:
    - hosts:
        - ws.appneuron.net
      secretName: ws-tls
  rules:
    - host: ws.appneuron.net
      http:
        paths:
          - path: /notification
            pathType: Prefix
            backend:
              serviceName: notification-worker-service
              servicePort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: notification-worker-service
  namespace: worker-app-dev
spec:
  ports:
    - name: tcp-port
      protocol: TCP
      port: 8000
      targetPort: 8000
  selector:
    app: notification-worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-worker
  namespace: worker-app-dev
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  selector:
    matchLabels:
      app: notification-worker
  template:
    metadata:
      labels:
        app: notification-worker
    spec:
      nodeSelector:
        dedicated: spot
      containers:
        - name: notification-worker
          image: CONTAINER_IMAGE
          imagePullPolicy: Always
          resources:
            requests:
              memory: "150M"
              cpu: "0.05"
            limits:
              memory: "200M"
              cpu: "0.1"
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: worker-app-config
                  key: redis-host
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: worker-app-secret
                  key: redis-password
            - name: KAFKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: worker-app-config
                  key: kafka-host
            - name: LOGSTASH_HOST
              valueFrom:
                configMapKeyRef:
                  name: worker-app-config
                  key: logstash-host
          ports:
            - name: ws-port
              containerPort: 8000
              hostPort: 8000
          livenessProbe:
            exec:
              command:
                - cat
                - /app/healthy.txt
            initialDelaySeconds: 60
            periodSeconds: 5
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
